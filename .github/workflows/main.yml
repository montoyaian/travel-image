name: Docker Image CI

on:
  push:
    branches: [ "master" ]
  pull_request:
    branches: [ "master" ]

jobs:


 deploykubernetes:
    runs-on: ubuntu-latest
    steps:
    - uses: actions/checkout@v4


    - name: Add /usr/local/bin to PATH
      run: |
        export PATH="/usr/local/bin:$PATH"
    - uses: azure/login@v2
      with:
        creds: '{"clientId":"${{ secrets.ARM_CLIENT_ID }}","clientSecret":"${{ secrets.ARM_CLIENT_SECRET }}","subscriptionId":"${{ secrets.ARM_SUBSCRIPTION_ID }}","tenantId":"${{ secrets.ARM_TENANT_ID }}"}'
    
    - name: Checkout c√≥digo
      uses: actions/checkout@v2
    
    - name: Instalar curl
      run: sudo apt-get update && sudo apt-get install -y curl
    
    - name: Azure CLI script
      uses: azure/cli@v2
      env:
        TAG_ID: ${{ steps.date.outputs.tag_id }}
      with:
        azcliversion: latest
        inlineScript: |
          az aks install-cli
          az account set --subscription 83c62e88-35c0-4f8d-8636-f21914cc6d80
          az aks get-credentials --resource-group travel-rg --name kubernetes-travel --overwrite-existing
          kubectl create namespace ingress-basic-travel1
          curl -fsSL -o get_helm.sh https://raw.githubusercontent.com/helm/helm/master/scripts/get-helm-3
          chmod 700 get_helm.sh
          ./get_helm.sh
          helm repo add ingress-nginx https://kubernetes.github.io/ingress-nginx
          helm repo update
          helm show values ingress-nginx/ingress-nginx
          helm install ingress-nginx ingress-nginx/ingress-nginx \
            --namespace ingress-basic-travel1 \
            --set controller.replicaCount=2 \
            --set controller.nodeSelector."beta\.kubernetes\.io/os"=linux \
            --set defaultBackend.nodeSelector."beta\.kubernetes\.io/os"=linux \
            --set controller.service.externalTrafficPolicy=Local \
            --set controller.service.loadBalancerIP=104.211.2.191
          kubectl get service -l app.kubernetes.io/name=ingress-nginx --namespace ingress-basic-travel1
          kubectl apply -f terraform/k8s/api-deployment.yml  --validate=false  
          sleep 30s && kubectl get service
          kubectl get ingress


